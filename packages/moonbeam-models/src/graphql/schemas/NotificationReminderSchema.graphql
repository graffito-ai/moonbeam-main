# graphql/NotificationReminderSchema.graphql
# Notification Reminder Schema File
enum NotificationReminderErrorType {
    DUPLICATE_OBJECT_FOUND
    VALIDATION_ERROR
    UNEXPECTED_ERROR
    NONE_OR_ABSENT
}

enum NotificationReminderType {
    CARD_LINKING_REMINDER
    NEW_MAP_FEATURE_REMINDER
    VETERANS_DAY_TEMPLATE_1_REMINDER
    VETERANS_DAY_TEMPLATE_2_REMINDER
    VETERANS_DAY_TEMPLATE_3_REMINDER
    REFERRAL_TEMPLATE_LAUNCH
    REFERRAL_TEMPLATE_1_REMINDER
    REFERRAL_TEMPLATE_2_REMINDER
    REFERRAL_TEMPLATE_3_REMINDER
    MULTIPLE_CARD_FEATURE_REMINDER
    SPOUSE_FEATURE_REMINDER
    FEEDBACK_TEMPLATE_1_REMINDER
    LOCATION_BASED_OFFER_REMINDER
}

enum NotificationReminderStatus {
    ACTIVE
    INACTIVE
}

enum NotificationReminderCadence {
    ONE_TIME
    DAILY
    WEEKLY
    BI_WEEKLY
    MONTHLY
}

type NotificationReminder @aws_cognito_user_pools @aws_api_key {
    id: ID!
    notificationReminderType: NotificationReminderType!
    notificationReminderStatus: NotificationReminderStatus!
    notificationReminderCadence: NotificationReminderCadence!
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
    # this will automatically schedule the notification reminder to start the next business day, on the agreed cadence
    nextTriggerAt: AWSDateTime!
    notificationChannelType: [NotificationChannelType]!
    # this represents the number of times that this notification reminder was triggered
    notificationReminderCount: Int!
    # this represents the number of time that this notification reminder can run - we default to 999,999 times as our INDEFINITE number
    notificationReminderMaxCount: Int!
}

type UserDetailsForNotifications @aws_cognito_user_pools @aws_api_key {
    id: ID!
    email: String!
    firstName: String!
    lastName: String!
    notificationChannelType: [NotificationChannelType]!
    notificationType: NotificationType!
}

type NotificationReminderResponse @aws_cognito_user_pools @aws_api_key {
    data: [NotificationReminder]
    errorType: NotificationReminderErrorType
    errorMessage: String
}

type UserForNotificationReminderResponse @aws_cognito_user_pools @aws_api_key {
    data: [RetrieveUserDetailsForNotifications]
    errorType: NotificationReminderErrorType
    errorMessage: String
}

input CreateNotificationReminderInput {
    id: ID
    notificationReminderType: NotificationReminderType!
    notificationReminderStatus: NotificationReminderStatus!
    notificationReminderCadence: NotificationReminderCadence!
    createdAt: AWSDateTime
    updatedAt: AWSDateTime
    nextTriggerAt: AWSDateTime
    notificationChannelType: [NotificationChannelType]!
    notificationReminderCount: Int
    notificationReminderMaxCount: Int
}

input UpdateNotificationReminderInput {
    id: ID!
    notificationReminderStatus: NotificationReminderStatus!
    updatedAt: AWSDateTime
}


