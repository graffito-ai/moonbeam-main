# graphql/AccountLinkSchema.graphql
# Storage Schema File
enum StorageErrorType {
    DUPLICATE_OBJECT_FOUND
    NONE_OR_ABSENT
    VALIDATION_ERROR
    UNEXPECTED_ERROR
    RESTRICTED_ACCESS
}

# Defines the types of file access levels available, implemented in line with what
# Amplify storage does.
#
# For more information, refer to:
# https://docs.amplify.aws/lib/storage/configureaccess/q/platform/js/
#
# For now just considering the public and private access levels, not protected.
enum FileAccessLevel {
    PUBLIC
    PRIVATE
    PROTECTED
}

# Defines the type of file to retrieve, which then, in turn determines the bucket that we
# read from, and implicitly, the CloudFront distribution that we read from.
enum FileType {
    MAIN
    LOGOFILES
}

type File @aws_cognito_user_pools {
    url: String!
}

type StorageResponse @aws_cognito_user_pools {
    data: File
    errorType: StorageErrorType
    errorMessage: String
}

type MilitaryVerificationReportResponse @aws_api_key @aws_cognito_user_pools {
    data: String # representing the S3 location of the file to append to
    errorType: StorageErrorType
    errorMessage: String
}

type FilesForUserResponse @aws_cognito_user_pools {
    data: [String]
    errorType: StorageErrorType
    errorMessage: String
}

input GetFilesForUserInput {
    id: ID!, # representing the Moonbeam user id
    level: FileAccessLevel!,
    type: FileType!
}

input GetStorageInput {
    id: String,
    level: FileAccessLevel!,
    type: FileType!,
    name: String!,
    expires: Boolean
}

input PutMilitaryVerificationReportInput {
    id: ID!
    firstName: String!
    lastName: String!
    dateOfBirth: String!
    enlistmentYear: String!
    addressLine: String!
    city: String!
    state: String!
    zipCode: String!
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
    militaryDutyStatus: MilitaryDutyStatus!
    militaryBranch: MilitaryBranch!
    militaryAffiliation: MilitaryAffiliation!
    militaryVerificationStatus: MilitaryVerificationStatusType!
    phoneNumber: String!
    emailAddress: String!
    date: AWSDate!
    reportNumber: AWSTimestamp!
}
