"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const CardExpirationBackfillTrigger_1 = require("./resolvers/CardExpirationBackfillTrigger");
/**
 * Lambda Function handler, handling incoming cron notification reminder events,
 * to be used to then trigger the notification reminder process.
 *
 * @param event EventBridge cron-based event to be passed in the handler
 */
exports.handler = async (event) => {
    // information on the event bridge trigger event
    console.log(`Received new moonbeam script schedule cron trigger event, through EventBridge, with event detail [${JSON.stringify(event["detail-type"])}] and event type [${event["detail"].eventType}]`);
    // handle the incoming script triggered event
    switch (event["detail"].eventType) {
        case "CardExpirationBackFillScriptReminderEvent":
            await (0, CardExpirationBackfillTrigger_1.triggerCardExpirationBackFill)();
            break;
        case "OfferBackFillScriptReminderEvent":
            break;
        default:
            console.log(`Unknown event type received ${event["detail"].eventType}.\nUnable to trigger any script!`);
            break;
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9sYW1iZGEvbWFpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLDZGQUF3RjtBQUV4Rjs7Ozs7R0FLRztBQUNILE9BQU8sQ0FBQyxPQUFPLEdBQUcsS0FBSyxFQUFFLEtBQXlJLEVBQWlCLEVBQUU7SUFDakwsZ0RBQWdEO0lBQ2hELE9BQU8sQ0FBQyxHQUFHLENBQUMscUdBQXFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDLHFCQUFxQixLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQztJQUV4TSw2Q0FBNkM7SUFDN0MsUUFBUSxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxFQUFFO1FBQy9CLEtBQUssMkNBQTJDO1lBQzVDLE1BQU0sSUFBQSw2REFBNkIsR0FBRSxDQUFDO1lBQ3RDLE1BQU07UUFDVixLQUFLLGtDQUFrQztZQUNuQyxNQUFNO1FBQ1Y7WUFDSSxPQUFPLENBQUMsR0FBRyxDQUFDLCtCQUErQixLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxrQ0FBa0MsQ0FBQyxDQUFDO1lBQ3hHLE1BQU07S0FDYjtBQUNMLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RXZlbnRCcmlkZ2VFdmVudH0gZnJvbSBcImF3cy1sYW1iZGFcIjtcbmltcG9ydCB7dHJpZ2dlckNhcmRFeHBpcmF0aW9uQmFja0ZpbGx9IGZyb20gXCIuL3Jlc29sdmVycy9DYXJkRXhwaXJhdGlvbkJhY2tmaWxsVHJpZ2dlclwiO1xuXG4vKipcbiAqIExhbWJkYSBGdW5jdGlvbiBoYW5kbGVyLCBoYW5kbGluZyBpbmNvbWluZyBjcm9uIG5vdGlmaWNhdGlvbiByZW1pbmRlciBldmVudHMsXG4gKiB0byBiZSB1c2VkIHRvIHRoZW4gdHJpZ2dlciB0aGUgbm90aWZpY2F0aW9uIHJlbWluZGVyIHByb2Nlc3MuXG4gKlxuICogQHBhcmFtIGV2ZW50IEV2ZW50QnJpZGdlIGNyb24tYmFzZWQgZXZlbnQgdG8gYmUgcGFzc2VkIGluIHRoZSBoYW5kbGVyXG4gKi9cbmV4cG9ydHMuaGFuZGxlciA9IGFzeW5jIChldmVudDogRXZlbnRCcmlkZ2VFdmVudDwnU2NoZWR1bGVkIEV2ZW50Jywge2V2ZW50VHlwZTogJ0NhcmRFeHBpcmF0aW9uQmFja0ZpbGxTY3JpcHRSZW1pbmRlckV2ZW50JyB8ICdPZmZlckJhY2tGaWxsU2NyaXB0UmVtaW5kZXJFdmVudCd9Pik6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgIC8vIGluZm9ybWF0aW9uIG9uIHRoZSBldmVudCBicmlkZ2UgdHJpZ2dlciBldmVudFxuICAgIGNvbnNvbGUubG9nKGBSZWNlaXZlZCBuZXcgbW9vbmJlYW0gc2NyaXB0IHNjaGVkdWxlIGNyb24gdHJpZ2dlciBldmVudCwgdGhyb3VnaCBFdmVudEJyaWRnZSwgd2l0aCBldmVudCBkZXRhaWwgWyR7SlNPTi5zdHJpbmdpZnkoZXZlbnRbXCJkZXRhaWwtdHlwZVwiXSl9XSBhbmQgZXZlbnQgdHlwZSBbJHtldmVudFtcImRldGFpbFwiXS5ldmVudFR5cGV9XWApO1xuXG4gICAgLy8gaGFuZGxlIHRoZSBpbmNvbWluZyBzY3JpcHQgdHJpZ2dlcmVkIGV2ZW50XG4gICAgc3dpdGNoIChldmVudFtcImRldGFpbFwiXS5ldmVudFR5cGUpIHtcbiAgICAgICAgY2FzZSBcIkNhcmRFeHBpcmF0aW9uQmFja0ZpbGxTY3JpcHRSZW1pbmRlckV2ZW50XCI6XG4gICAgICAgICAgICBhd2FpdCB0cmlnZ2VyQ2FyZEV4cGlyYXRpb25CYWNrRmlsbCgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJPZmZlckJhY2tGaWxsU2NyaXB0UmVtaW5kZXJFdmVudFwiOlxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgVW5rbm93biBldmVudCB0eXBlIHJlY2VpdmVkICR7ZXZlbnRbXCJkZXRhaWxcIl0uZXZlbnRUeXBlfS5cXG5VbmFibGUgdG8gdHJpZ2dlciBhbnkgc2NyaXB0IWApO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxufVxuIl19